!function(){function a(a,b){"use strict";var c={};c.version="1.0.0-dev",c.constants={DEFAULT_MOVING_AVERAGE_NODES:2};var c=c||{};c.average=function(){};var c=c||{};return c.accumulateGroupForNDayMovingAverage=function(a,b){return b="undefined"!=typeof b?b:c.constants.DEFAULT_MOVING_AVERAGE_NODES,{all:function(){var c=0,d=[],e=a.all(),f=e.map(function(a,e,f){for(var g=b-1,h=0,i=0,j=0,k=0,l=[];h++<g;){var m=f[e-h];m&&(i++,j+=m.value,l.push({key:m.key,value:m.value}))}return i++,j+=a.value,k=j/i,c+=a.value,l.push({key:a.key,value:a.value}),d.push({key:a.key,value:a.value}),{key:a.key,value:k,debug:{cumulate:c,thisResult:l,result:d}}});return f},top:function(){var b=0,c=[];return a.top.apply(a,arguments).map(function(a){return b+=a.value,c.push({key:a.key,value:a.value}),{key:a.key,value:{cumulate:b,result:c}}})}}},c.d3=a,c.crossfilter=b,c}if("function"==typeof define&&define.amd)define(["d3","crossfilter"],a);else if("object"==typeof module&&module.exports){var b=require("d3"),c=require("crossfilter");"function"!=typeof c&&(c=c.crossfilter),module.exports=a(b,c)}else this["crossfilter-ma"]=a(d3,crossfilter)}();
//# sourceMappingURL=crossfilter-ma.min.js.map