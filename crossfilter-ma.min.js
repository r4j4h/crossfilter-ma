!function(){function a(a,b){"use strict";var c={};c.version="1.0.0-dev",c.constants={DEFAULT_MOVING_AVERAGE_NODES:2};var c=c||{};return c.accumulateGroupForNDayMovingAverage=function(a,b){if(!a||!a.all||"function"!=typeof a.all)throw new Error("You must pass in a crossfilter group!");return b="undefined"!=typeof b?b:c.constants.DEFAULT_MOVING_AVERAGE_NODES,{all:function(){var c=0,d=a.all(),e=d.map(function(a,d,e){for(var f=b,g=0,h=0,i=0,j=[];--f>0;){var k=e[d-f];k&&(g++,h+=k.value,j.push({key:k.key,value:k.value}))}return g++,h+=a.value,c+=a.value,j.push({key:a.key,value:a.value}),i=h/g,{key:a.key,value:a.value,rollingAverage:i,_debug:{cumulate:c,thisResult:j}}});return e},top:function(){var c=0,d=a.top.apply(a,arguments),e=d.map(function(a,d,e){for(var f=b-1,g=0,h=0,i=0,j=0,k=[];g++<f;){var l=e[d-g];l&&(h++,i+=l.value,k.push({key:l.key,value:l.value}))}return h++,i+=a.value,j=i/h,c+=a.value,k.push({key:a.key,value:a.value}),{key:a.key,value:a.value,rollingAverage:j,_debug:{cumulate:c,thisResult:k}}});return e}}},c.d3=a,c.crossfilter=b,c}if("function"==typeof define&&define.amd)define(["d3","crossfilter"],a);else if("object"==typeof module&&module.exports){var b=require("d3"),c=require("crossfilter");"function"!=typeof c&&(c=c.crossfilter),module.exports=a(b,c)}else this["crossfilter-ma"]=a(d3,crossfilter)}();
//# sourceMappingURL=crossfilter-ma.min.js.map